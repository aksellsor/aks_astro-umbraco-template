---
import Layout from "../layouts/Layout.astro";
import client from '../umbraco-client';
import Page from '../layouts/Page.astro';
import Root from '../layouts/Root.astro';

let SSR = import.meta.env.RENDER_MODE === "SSR";
let LOCALES = import.meta.env.LOCALES?.split(",");
export async function getStaticPaths() {
	const pages = await client.getContentByType('page',null,LOCALES?.includes(Astro.params.slug.split("/")[0]));
	return [...pages].map((page) => ({
		params: { slug: page.route.path.replace(/^\/|\/$/,"") },
		props: page
	}))
}
let currentSlug = Astro.params.slug || "/";
let origin = new URL(Astro.url).origin;
let preview = Astro.url.searchParams.get("preview");
const pageData = SSR ? await client.getContentById(origin,currentSlug,preview).then(res => res) : Astro.props;
if (pageData?.status === 404) {
	return new Response(null, {
		status: 404,
		statusText: 'Not found!',
	});
}
const { contentType, name, route, id, cultures } = pageData ||Â {};
---

<Layout {name} path={route?.path} {id} {cultures}>
	{
		() => {
			switch(contentType) {
				case "page":
					return <Page props={pageData}/>
				default:
					return <Root props={pageData}/>
			}
		}
	}
</Layout>