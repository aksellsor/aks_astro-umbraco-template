---
	// import {Image} from 'astro:assets';
let logo = {url:"https://placeholder.pics/svg/110x60/323232/838383-3C3C3C/%5Blogo%5D", name:"logo"}

let logoSVG = fetch(logo.url)
    .then(res => res.text())
    .then(data => {
      return data.match(/<svg.*<\/svg>/g)[0];
    })
    .catch(error => console.error(error))
---
<a href="/" class="logo" id="logo-clickable">
    <!-- <Image src={logo?.url} alt={logo?.name} inferSize /> -->
    <Fragment set:html={logoSVG} />
</a>
<ul id="menu">
<li class="menu-item" role="menuitem" id="copyLogo">
  <svg height="1em" width="1em" viewBox="0 0 24 24" width="13" height="13" stroke="currentColor" stroke-width="2.5" fill="none" stroke-linecap="round" stroke-linejoin="round" class="css-i6dzq1"><rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect><path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path></svg>
  Copy (svg)
</li>
<li class="menu-item" role="menuitem"> 
  <a download tabindex="-1" data-orientation="vertical" href={logo?.url}>
    <svg viewBox="0 0 24 24" width="1em" height="1em" stroke="currentColor" stroke-width="2.5" style="position: relative; top: -1px" fill="none" stroke-linecap="round" stroke-linejoin="round" class="css-i6dzq1"><path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path><polyline points="7 10 12 15 17 10"></polyline><line x1="12" y1="15" x2="12" y2="3"></line></svg>
    Download logo (svg)
  </a>
  </li>
</ul>
<script>
  import {copySvgObject} from "../utils";
  const init = () => {
  // Variables
  const clickable = document.getElementById('logo-clickable');
  const contextMenu = document.getElementById('menu');
  const copyLogo = document.querySelector('#copyLogo');

  const onRightClickLogo = (e) => {

        e.preventDefault();
        const { clientX, clientY } = e;
        document.body.appendChild(contextMenu);

        const positionY =
          clientY + contextMenu.scrollHeight >= window.innerHeight
            ? window.innerHeight - contextMenu.scrollHeight - 20
            : clientY;
        const positionX =
          clientX + contextMenu.scrollWidth >= window.innerWidth
            ? window.innerWidth - contextMenu.scrollWidth - 20
            : clientX;

        contextMenu.setAttribute(
          "style",
          `--width: ${contextMenu.scrollWidth}px;
          --height: ${contextMenu.scrollHeight}px;
          --top: ${positionY}px;
          --left: ${positionX}px;`
        );
        contextMenu.classList.add('show');
  }
  const hideContextMenu = () => {
    contextMenu.classList.remove('show');
  }
  const copySvg = () => copySvgObject('#logo-clickable svg');

  // Add event listeners
   clickable?.addEventListener("contextmenu", onRightClickLogo);
   document.addEventListener("click", hideContextMenu);
   copyLogo?.addEventListener("click", copySvg);

   document.addEventListener('astro:before-swap', () => {
    // SomeClass.destroy()

    // Remove event listeners
    clickable?.removeEventListener("contextmenu", onRightClickLogo);
    document.removeEventListener("click", hideContextMenu);
    copyLogo?.removeEventListener("click", copySvg);
  }, { once: true })
  }
  // Initialize on first load
  init()

  // Re-initialize after swapping pages
  document.addEventListener("astro:after-swap", init)
</script>

<style>
  #logo-clickable > * {
    pointer-events: none;
  }
#menu {
  --menu-border: rgba(255, 255, 255, 0.08);
  --menu-bg: linear-gradient(
    45deg,
    rgba(10, 20, 28, 0.6) 0%,
    rgba(10, 20, 28, 0.9) 100%
  );
  --item-border: rgba(255, 255, 255, 0.1);
  --item-color: #fff;
  --item-bg-hover: rgba(255, 255, 255, 0.1);
display: block;
  background-color: white;
  padding: 0.25rem;
  border-radius: 5px;
  box-shadow: 2px 2px 30px lightgrey;
  position: fixed;
  transform-origin: left top;
  z-index: 2;
  opacity: 0;
  overflow: hidden;
  user-select: none;
  transition:none;
  top: var(--top);
  left: var(--left);
  pointer-events: none;
  opacity: 0;
  z-index: 999999999;
  background: var(--menu-bg);
  -webkit-backdrop-filter: blur(5px);
          backdrop-filter: blur(5px);
  height: 0;
  overflow: hidden;
  box-shadow: 0 0 0 1px var(--menu-border), 0 2px 2px rgba(0, 0, 0, 0.03), 0 4px 4px rgba(0, 0, 0, 0.04), 0 10px 8px rgba(0, 0, 0, 0.05), 0 15px 15px rgba(0, 0, 0, 0.06), 0 30px 30px rgba(0, 0, 0, 0.07), 0 70px 65px rgba(0, 0, 0, 0.09);

    opacity: 0;
    transform: scale(0.5);
}

#menu.show {
  pointer-events: all;
  animation: menuAnimation 0.2s 0s both;
  /* opacity: 1;
  transform: translateY(0);
  transition:transform .2s cubic-bezier(0.25, 0.46, 0.45, 0.94), opacity .2s cubic-bezier(0.25, 0.46, 0.45, 0.94); */
}

@keyframes menuAnimation {
  0% {
    opacity: 0;
    transform: scale(0.5);
  }
  100% {
    height: var(--height);
    opacity: 1;
    border-radius: 8px;
    transform: scale(1);
  }
}
.menu-item {
  line-height: 1;
  padding: 0.5rem .75rem;
  transition: 0.1s;
  color: #fff;
  text-decoration: none;
  font-size: .9rem;
  border-radius: 5px;
  border-bottom: 1px solid var(--item-border);
  display: flex;
  gap: .75rem;
}
.menu-item:last-child {
  border-bottom: 0;
}
.menu-item a {
  display: flex;
  gap: .75rem;
  text-decoration: none;
}
.menu-item:hover {
  background-color: var(--item-bg-hover);
  cursor: pointer;
  border-color: transparent;
}
</style>