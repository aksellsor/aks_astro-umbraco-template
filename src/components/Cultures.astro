---
const {cultures} = Astro.props;
const currentPath = Astro.url.pathname;
---
<!-- <pre>{JSON.stringify(cultures,null,1)}</pre> -->
<div class="lang-selector">
    {typeof cultures === "object" &&
        Object.entries(cultures)?.map((keyVal: any, index) =>
            {
                let lang = keyVal[0];
                let url = keyVal[1].path;
                return (
                    <>
                        <a href={url} class={currentPath === url ? "current":""}>
                            {lang}
                        </a>
                        {index !== Object.entries(cultures)?.length -1 ? <span>/</span> : "" }
                    </>
                )
            }
        )
    }
</div>

<style>
    .lang-selector {
        display: flex;
        align-items: center;
        margin-left: auto;
    }
    .lang-selector span {
        opacity: 0.5;
    }
    .lang-selector a {
        padding: .5rem;
        text-decoration: none;
        opacity: 0.5;
    }
    .lang-selector a.current {
        font-weight: bold;
        opacity: 1;
    }
    .lang-selector a:hover {
        background-color: rgba(150,150,150,0.2);
    }
</style>