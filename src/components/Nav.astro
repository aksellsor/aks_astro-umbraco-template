---
	import client from '../umbraco-client';
	import Logo from './Logo.astro';
	let LOCALES = import.meta.env.LOCALES?.split(",");
	let SSR = import.meta.env.RENDER_MODE === "SSR";

	let langPrefix = LOCALES?.filter(lang => lang === Astro.url.pathname.split("/")[1])
	// const pages = await client.getContentByType('page', { sort: { type: 'createDate', order: 'asc' }});
	let origin = new URL(Astro.url).origin;
	let preview = Astro.url.searchParams.get("preview");
	const pageData = SSR ? await client.getContentById(origin,langPrefix || "/",preview).then(res => res) : Astro.props;
	if (pageData?.status === 404) {
		return new Response(null, {
			status: 404,
			statusText: 'Not found!',
		});
	}
	const { properties } = pageData ||Â {};
	let navMenu = properties?.navMenu;
---
<nav class="nav">
	<Logo />
	<div class="menu">
		{navMenu?.map(page => {
			const { path } = page.route
			return (
				<a
					href={`${path}`}
					class="link"
					// data-astro-prefetch="tap"
					// data-astro-prefetch="hover"
				>
					{page.title}
				</a>
			);
		})}
		<!-- {pages.map(post => {
			// const { title, description, image } = post.properties;
			const { path } = post.route
			return (
				<a
					href={`${path}`}
					class="link"
					// data-astro-prefetch="tap"
					// data-astro-prefetch="hover"
				>
					{post.name}
				</a>
			);
		})} -->
	</div>
</nav>

<style>
    .nav {
        margin-bottom: 2rem;
		display: flex;
		align-items: center;
		gap:3rem;
		padding: 1.5rem 0;
    }
    .logo {
		display: block;
		color: inherit;
		text-decoration: none;
	}

	.menu {
		display:flex;
        flex-wrap: wrap;
        gap: .5rem;
	}

	.link {
		background: white;
		color: #13151a;
        opacity:0.7;
		text-decoration: none;
        padding:.5rem 1rem;
        border-radius: .2rem;
	}
	.link:hover {opacity:1}	
</style>